name: AWS CDK Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test_lint:
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Install dependencies
      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      # Run unit tests with coverage
      - name: Run unit tests
        run: |
          coverage run -m unittest discover -s test
          coverage report -m
          coverage xml

      # Create xUnit reports
      - name: Create xUnit reports
        run: |
          python -m xmlrunner discover -s test -o ./xunit-reports

      # Run flake8 for code quality
      - name: Run flake8
        run: |
          pip install flake8
          flake8 > flake8.rpt || exit 0

      # Upload coverage and xUnit reports as artifacts
      - name: Upload coverage and xUnit reports
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: |
            coverage.xml
            xunit-reports/
            flake8.rpt

  static_analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Static analysis (you can integrate security tools here)
      - name: Security scan (customize based on tools)
        run: |
          echo "Run security scans here"

  synthesize:
    runs-on: ubuntu-latest
    needs: [test_lint, static_analysis]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install AWS CDK
        run: npm install -g aws-cdk

      # Synthesize CloudFormation templates
      - name: CDK Synth
        run: cdk synth

  deploy:
    runs-on: ubuntu-latest
    needs: synthesize
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install AWS CDK
        run: npm install -g aws-cdk

      # Deploy to AWS
      - name: CDK Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cdk deploy --require-approval never --target sbx --env dev
