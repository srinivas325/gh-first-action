name: Multiple Env Workflow
on:
  workflow_call:
    inputs:
      node-version:
        type: string
        required: false
        default: '18.19'
      synth-command:
        type: string
        required: false
        default: npx cdk synth --ci
      deploy-environments:
        type: string
        required: false
        default: |
          dev: 
            environment: aws-wse-partner-dev
            synth-dir: cdk.out
            deploy-args: ''
          itg: 
            environment: aws-wse-partner-itg
            synth-dir: cdk.out
            deploy-args: ''
          cat: 
            environment: aws-wse-partner-cat
            synth-dir: cdk.out
            deploy-args: ''
          prod: 
            environment: aws-wse-partner-prod
            synth-dir: cdk.out
            deploy-args: ''
      aws-region:
        type: string
        required: false
        default: us-east-1
      continue-on-scan-error:
        type: boolean
        required: false
        default: true
      runs-on:
        type: string
        required: false
        default: ubuntu-latest
      cft-check-command:
        type: string
        required: false
        default: npx --yes aws-cft-check@latest > cdk.out.cftcheck
      synth-artifacts:
        type: string
        required: false
        default: |
          **/cdk.out
          **/cdk.out.cftcheck

    outputs:
      version:
        description: The semantic version of the project
        value: ${{ jobs.version.outputs.version }}
      node-version:
        description: The Node.js version used to build the project
        value: ${{ jobs.build.outputs.node-version }}

jobs:

  version:
    name: Semantic Version
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Get Version
        run: echo "VERSION=1.0.0" >> $GITHUB_ENV

  build:
    name: Build
    needs: version
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Install Dependencies
        run: npm install
      - name: Build Project
        run: npm run build
      - name: Set Node Version
        run: echo "NODE_VERSION=${{ inputs.node-version }}" >> $GITHUB_ENV

  synth:
    name: Synth
    needs: build
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Run Synth
        run: ${{ inputs.synth-command }}

  scan:
    name: Static Analysis
    needs: [version, build, synth]
    runs-on: ${{ inputs.runs-on }}
    steps:
      - name: Run Static Analysis
        run: echo "Running static analysis..."

  deploy:
    name: Deploy
    needs: [build, scan]
    runs-on: ${{ inputs.runs-on }}
    strategy:
      matrix:
        environment: [dev, itg, cat, prod]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Deploy to ${{ matrix.environment }}
        run: |
          ENVIRONMENT=${{ inputs.deploy-environments[matrix.environment].environment }}
          SYNTH_DIR=${{ inputs.deploy-environments[matrix.environment].synth-dir }}
          DEPLOY_ARGS=${{ inputs.deploy-environments[matrix.environment].deploy-args }}
          echo "Deploying to $ENVIRONMENT using $SYNTH_DIR with args $DEPLOY_ARGS"

